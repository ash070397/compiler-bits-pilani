**
FUNCTION
readArr 53      0
Variable Symbol Table:
lno: 93, depth: 1, tag= 0
entries
        k 94 0 2 4 0
        arr1 94 0 4 0 2 1 15
        tempvar 96 2 4 0 2
        i 97 2 2 0 0

Variable Symbol Table:
lno: 99, depth: 2, tag= 1
entries

FUNCTION
arraySum        55      0
Variable Symbol Table:
lno: 55, depth: 1, tag= 0
entries
        index 59 2 2 0 0
        n 56 0 2 4 0
        t 60 2 1 0 1
        list 56 0 4 0 2 1 15
        sum 57 1 4 0 2

Variable Symbol Table:
lno: 62, depth: 2, tag= 1
entries

Variable Symbol Table:
lno: 67, depth: 3, tag= 1
entries

Variable Symbol Table:
lno: 70, depth: 3, tag= 1
entries

Variable Symbol Table:
lno: -1, depth: 3, tag= 1
entries

FUNCTION
program 77      0
Variable Symbol Table:
lno: 77, depth: 1, tag= 0
entries
        k 80 2 2 0 0
        s 81 2 4 0 2
        A 79 2 4 0 2 1 15
**

declare module readArr;
**the following function computes the sum of first n elements of the array**
<<module arraySum>>
takes input[list:array[1..15] of    real, n:integer];
returns  [sum:real];
start
	declare index:integer;
	declare t:boolean;
	sum:=0.0;
	for(index in  1..15)
	start
		t:= index<=n;
		switch(t)
		start
			case true: print(list[index]);
				   sum:=sum+list[index];
				   break;
			case false: print(sum);
				    print(index);
				    break;
		end
	end
	print(sum);
end
<<<driver program>>>
start
	declare A:array[1..15] of real;
	declare k:integer;
	declare s:real;
	get_value(k);
	use module readArr with parameters A,k;
	[s]:= use module arraySum with parameters A,k;
	print(s);
end

**The following module reads k  values one by one**
** the array elements are populated with the read values**
**The array variable is not returned as the translation will**
**use the same locations for array elements**

<<module readArr>>
takes input [arr1:array[1..15] of real,k:integer];
start
	declare tempvar:real;
	declare i:integer;
	i:=1;
	while(i<=k)
	start
		get_value(tempvar);
		arr1[i]:=tempvar;
		i:=i+1;
	end
end
